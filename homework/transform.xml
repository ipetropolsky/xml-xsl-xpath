<?xml version="1.0" encoding="utf-8"?>
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">
    <xsl:output method="html"/>
    <xsl:template match="/">
        <html>
            <body>
                <h1>Pull requests</h1>
                <div>
                    <div>
                        <div>
                        <xsl:text>Open</xsl:text>
                        <xsl:value-of select="count(//pullRequest[currentState='open'])"/>
                        </div>
                        <div>
                            <xsl:text>Closed</xsl:text>
                            <xsl:value-of select="count(//pullRequest[currentState != 'open'])"/>
                        </div>
                    </div>
                    <div>
                        <xsl:apply-templates select="pullRequests/pullRequest"/>
                    </div>
                </div>
            </body>
        </html>
    </xsl:template>

    <xsl:template match="pullRequests/pullRequest">
        <div>
            <!--left part-->
            <div>
                <xsl:apply-templates select="title"/>
                <xsl:apply-templates select="labels"/>
                <div>
                    <span>
                        <xsl:value-of select="concat('#', @id)"/>
                        <xsl:choose>
                            <xsl:when test="currentState='closed'">
                                <xsl:apply-templates select="states" mode="closed"/>
                            </xsl:when>
                            <xsl:when test="currentState='merged'">
                                <xsl:apply-templates select="states" mode="merged"/>
                            </xsl:when>
                            <xsl:otherwise>
                                <xsl:apply-templates select="states" mode="open"/>
                            </xsl:otherwise>
                        </xsl:choose>
                    </span>
                </div>
            </div>
                <xsl:text>Comments: </xsl:text>
                <xsl:value-of select="comments"/>
            <div>
            </div>
        </div>
    </xsl:template>

    <xsl:template match="title">
        <a href="#">
            <xsl:value-of select="."/>
        </a>
    </xsl:template>

    <xsl:template match="labels">
        <span>
            <xsl:apply-templates select="label"/>
        </span>
    </xsl:template>

    <xsl:template match="label">
        <a href="#" style="background-color:">
            <xsl:value-of select="name"/>
        </a>
    </xsl:template>

    <xsl:template match="user">
        <a href="#">
            <xsl:value-of select="name"/>
        </a>
    </xsl:template>

    <xsl:template match="state">
        <div>
            <span>
                <xsl:value-of select="@id"/>
                <xsl:if test="state = 'open'">
                    <xsl:text> opened</xsl:text>
                </xsl:if>
                <xsl:text> by </xsl:text>
                <xsl:apply-templates select="user"/>
            </span>
        </div>
    </xsl:template>
    <xsl:template match="states" mode="closed">
        <xsl:text> by </xsl:text>
        <xsl:value-of select="ancestor::node()/user/name"/>
        <xsl:text> was closed at </xsl:text>
        <xsl:value-of select="state[3]/time"/>
    </xsl:template>
    <xsl:template match="states" mode="merged">
        <xsl:text> by </xsl:text>
        <xsl:value-of select="ancestor::node()/user/name"/>
        <xsl:text> was merged at </xsl:text>
        <xsl:value-of select="state[2]/time"/>
    </xsl:template>
    <xsl:template match="states" mode="open">
        <xsl:text> opened by </xsl:text>
        <xsl:value-of select="ancestor::node()/user/name"/>
        <xsl:text> at  </xsl:text>
        <xsl:value-of select="state[1]/time"/>
    </xsl:template>
</xsl:stylesheet>
